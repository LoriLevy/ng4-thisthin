import { AppPage } from './app.po';
import { element, browser, by, Key } from 'protractor';
import { HomePage } from './pages/home.page';
import { BakingPage } from './pages/baking.page';
import { GettingStartedPage } from './pages/gettingstarted.page';
import { EnhancersPage } from './pages/enhancers.page';
import { RecipesPage } from './pages/recipes.page';

describe('This Thin Test Suite', () => {
    let appPage: AppPage;

/* Home Page Tests */
describe('This Thin Home Page', () => {
  let homePage: HomePage;
  
  beforeAll(() => {
    homePage = new HomePage();
    appPage.navigateToHome();  
  });

  it('should display "Home" as the Page Header', () => {
    expect(homePage.getPageHeading()).toEqual('Do you want to be "This Thin"?');
  });

  it('should have a banner title of "Home" ', () => {
    expect(homePage.getBannerTitle()).toEqual('Home');

  });
  afterAll(() => {
    appPage.navigateToHome();  
  });
});

/* Getting Started Page Tests */
describe('This Thin Getting Started Page', () => {
  let gettingstartedPage: GettingStartedPage;

  beforeAll(() => {
    gettingstartedPage = new GettingStartedPage();
    appPage.navigateToGetStarted();
  });

  it('should be on the Getting Started Page', () => {
    expect(browser.getCurrentUrl()).toContain("gettingstarted");
  })

  it('should display the "Playing the Fat Game" as the Page Header', () => {
    expect(gettingstartedPage.getPageHeading()).toEqual('Playing the Fat Game');
  });

  it('should display the "Getting Started" as the Page Banner Title', () => {
    expect(gettingstartedPage.getBannerTitle()).toEqual('Getting Started');
  });

  afterAll(() => {
    appPage.navigateToHome();  
  });
});

/* Recipes Page Tests */
describe('This Thin Recipes Page', () => {
  let recipesPage: RecipesPage;

  beforeAll(() => {
    recipesPage = new RecipesPage();
    appPage.Recipes();
  });

  it('should be on the Recipes Page', () => {
    expect(browser.getCurrentUrl()).toContain("recipes");
  })

  it('should display "Recipes" as the Page Header', () => {
    expect(recipesPage.getPageHeading()).toEqual('Recipes');
  });

  it('should have a banner title of "Recipes" ', () => {
    expect(recipesPage.getBannerTitle()).toEqual('Recipes');
  });
  afterAll(() => {
    appPage.navigateToHome();  
  });
});

/* Enhancers Page Tests */
describe('This Thin Getting Started Page', () => {
  let enhancersPage: EnhancersPage;

  beforeAll(() => {
    enhancersPage = new EnhancersPage();
    appPage.navigateToEnhancers();
  });

  it('should be on the Enhancers Page', () => {
    expect(browser.getCurrentUrl()).toContain("enhancers");
  })

  it('should display "Enhancers" as Page Header', () => {
    expect(enhancersPage.getPageHeading()).toEqual('Enhancers');
  });

  it('should have a banner title of "Enhancers" ', () => {
    expect(enhancersPage.getBannerTitle()).toEqual('Enhancers');
  });
  afterAll(() => {
    appPage.navigateToHome();  
  });
});

/* Baking Page Tests */
describe('This Thin Baking Page', () => {
  let bakingPage: BakingPage;

  beforeAll(() => {
    bakingPage = new BakingPage();
    appPage.navigateToBaking();
  });

  it('should be on the Baking Page', () => {
    expect(browser.getCurrentUrl()).toContain("baking");
  })

  it('should display "Baking" as Page Header', () => {
    expect(bakingPage.getPageHeading()).toEqual('Low-Fat Baking');
  });

  it('should have a banner title of "Baking" ', () => {
    expect(bakingPage.getBannerTitle()).toEqual('Low-Fat Baking');
  });
  afterAll(() => {
    appPage.navigateToHome();  
  });
});
});